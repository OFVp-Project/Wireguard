name: Publish docker image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - released

env:
  DOCKERPLATFORM: "linux/amd64,linux/arm64"
  DOCKERIMAGE: "ghcr.io/ofvp-project/wireguard"
  NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

jobs:
  publishdocker:
    runs-on: ubuntu-latest
    name: Publish Server image
    if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          submodules: true

      - name: Setup QEMU to Docker
        uses: docker/setup-qemu-action@v1

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login into registry Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start MongoDB And Export IP
        if: github.event_name == 'pull_request'
        id: mongostart
        run: |
          docker run --rm --name ofvp_mongodb -d -p 27017:27017 mongo
          echo "mongodbip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ofvp_mongodb | sed "s|'||g")" >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Build Docker Image
        if: steps.mongostart.outcome == 'success'
        id: dockertestbuild
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.DOCKERIMAGE }}:nightly
          platforms: ${{ env.DOCKERPLATFORM }}
          cache-from: type=gha,scope=${{ hashFiles('**/package-lock.json') }}
          cache-to: type=gha,mode=max,scope=${{ hashFiles('**/package-lock.json') }}

      - name: Up Docker Container
        if: steps.dockertestbuild.outcome == 'success'
        run: docker run --rm --name ofvp_server -e MongoDB_URL="mongodb://${{ env.mongodbip }}:27017" -e NODE_ENV="development" ${{ env.DOCKERIMAGE }}:nightly --debug

      - name: Set Image Build Environment
        run: |
          if [[ "${{ github.event_name }}" == 'release' ]]; then
            echo "Building release image"
            echo IMAGE_TAG=latest >> $GITHUB_ENV
          else
            echo "Building development image"
            echo IMAGE_TAG=nightly >> $GITHUB_ENV
          fi
          cat $GITHUB_ENV

      - name: Push docker image
        if: github.event_name == 'push' || github.event_name == 'release'
        id: pre_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: server
          tags: ${{ env.DOCKERIMAGE }}:${{ env.IMAGE_TAG }}
          platforms: ${{ env.DOCKERPLATFORM }}
          cache-from: type=gha,scope=${{ hashFiles('**/package-lock.json') }}
          cache-to: type=gha,mode=max,scope=${{ hashFiles('**/package-lock.json') }}
